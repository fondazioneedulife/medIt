openapi: 3.0.0
info:
  title: MedIt API
  description: API to manage users and medications.
  version: 1.0.0
servers:
  - url: https://api.medit.com/v1
    description: Production server
tags:
  - name: Authentication
    description: API for user authentication
  - name: Synchronization
    description: API for data synchronization
  - name: QRCode
    description: API for QR code validation

paths:
  /sync/upload:
    post:
      tags:
        - Synchronization
      summary: Sync data from client to backend
      operationId: syncDataUpload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncDataRequest'
      responses:
        '200':
          description: Data successfully synced
        '400':
          description: Invalid data
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /sync/download:
    get:
      tags:
        - Synchronization
      summary: Sync data from backend to client
      operationId: syncDataDownload
      responses:
        '200':
          description: Data successfully synced
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDataResponse'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /qrcode/check:
    post:
      tags:
        - QRCode
      summary: Check the validity of a QR code
      operationId: checkQRCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QRCodeRequest'
      responses:
        '200':
          description: QR code is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCodeResponse'
        '400':
          description: Invalid QR code
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SyncDataRequest:
      x-class-name: SyncDataRequest
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
        taken_medications:
          type: array
          items:
            $ref: '#/components/schemas/TakenMedication'

    SyncDataResponse:
      x-class-name: SyncDataResponse
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/Reminder'
        taken_medications:
          type: array
          items:
            $ref: '#/components/schemas/TakenMedication'

    QRCodeRequest:
      x-class-name: QRCodeRequest
      type: object
      properties:
        qrcode:
          type: string
          example: ""

    QRCodeResponse:
      x-class-name: QRCodeResponse
      type: object
      properties:
        valid:
          type: boolean
          example: true
        userId:
          type: integer
          example: 1

    User:
      x-class-name: User
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          $ref: '#/components/schemas/RoleEnum'
        qrcode:
          type: string
          format: byte
        timezone:
          type: string
        language:
          type: string
        synced_at:
          type: string
          format: date-time

    Medication:
      x-class-name: Medication
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/MedicationTypeEnum'
        dose:
          type: integer
        program:
          type: string
        quantity:
          type: integer
        note:
          type: string
        userId:
          type: integer
        synced_at:
          type: string
          format: date-time

    Reminder:
      x-class-name: Reminder
      type: object
      properties:
        id:
          type: integer
        medication_id:
          type: integer
        reminder_date_time:
          type: string
          format: date-time
        id_group:
          type: integer
        synced_at:
          type: string
          format: date-time

    TakenMedication:
      x-class-name: TakenMedication
      type: object
      properties:
        id:
          type: integer
        reminder_id:
          type: integer
        date_time:
          type: string
          format: date-time
        synced_at:
          type: string
          format: date-time

    RoleEnum:
      type: string
      enum:
        - patient
        - caregiver

    MedicationTypeEnum:
      type: string
      enum:
        - capsule
        - pill
        - powder

    Problem:
      x-class-name: Problem
      description: error occurred - see status code and problem object for more information.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: "about:blank"
          example: "https://zalando.github.io/problem/constraint-violation"
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
        errorCategory:
          type: string
          description: The category of the error.
          example: Invalid
        fieldName:
          type: string
          description: The name of the field that caused the error.
          example: phone
        timestamp:
          type: string
          format: date-time
          description: The timestamp when the error occurred.
          example: "2024-11-13T10:42:21.263191453Z"
        traceId:
          type: string
          description: The trace ID for the error.
          example: "057b351ca8e8badf158357ecbb2edb73"